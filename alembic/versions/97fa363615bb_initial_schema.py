'''initial schema

Revision ID: 97fa363615bb
Revises: 
Create Date: 2025-08-09 22:28:30.366994

'''
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '97fa363615bb'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    '''Upgrade schema.'''
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('author',
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.Column('author_name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('author_id')
    )
    op.create_table('demographic',
    sa.Column('demographic_id', sa.Integer(), nullable=False),
    sa.Column('demographic_name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('demographic_id'),
    sa.UniqueConstraint('demographic_name')
    )
    op.create_table('genre',
    sa.Column('genre_id', sa.Integer(), nullable=False),
    sa.Column('genre_name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('genre_id'),
    sa.UniqueConstraint('genre_name')
    )
    op.create_table('tag',
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.Column('tag_name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('tag_id'),
    sa.UniqueConstraint('tag_name')
    )
    op.create_table('user',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('displayname', sa.String(length=64), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('last_login', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('collection',
    sa.Column('collection_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('collection_name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('collection_id'),
    sa.UniqueConstraint('user_id', 'collection_name', name='unique_user_collection')
    )
    op.create_table('manga',
    sa.Column('manga_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('published_date', sa.Date(), nullable=True),
    sa.Column('external_average_rating', sa.Numeric(precision=2, scale=1), nullable=True),
    sa.Column('average_rating', sa.Numeric(precision=2, scale=1), nullable=True),
    sa.Column('cover_image_url', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['author.author_id'], ),
    sa.PrimaryKeyConstraint('manga_id'),
    sa.UniqueConstraint('title')
    )
    op.create_table('manga_author',
    sa.Column('manga_id', sa.Integer(), nullable=True),
    sa.Column('author_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['author.author_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['manga_id'], ['manga.manga_id'], ondelete='CASCADE')
    )
    op.create_table('manga_collection',
    sa.Column('collection_id', sa.Integer(), nullable=False),
    sa.Column('manga_id', sa.Integer(), nullable=False),
    sa.Column('added_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['collection_id'], ['collection.collection_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['manga_id'], ['manga.manga_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('collection_id', 'manga_id')
    )
    op.create_table('manga_demographic',
    sa.Column('manga_id', sa.Integer(), nullable=True),
    sa.Column('demographic_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['demographic_id'], ['demographic.demographic_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['manga_id'], ['manga.manga_id'], ondelete='CASCADE')
    )
    op.create_table('manga_genre',
    sa.Column('manga_id', sa.Integer(), nullable=True),
    sa.Column('genre_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['genre_id'], ['genre.genre_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['manga_id'], ['manga.manga_id'], ondelete='CASCADE')
    )
    op.create_table('manga_tag',
    sa.Column('manga_id', sa.Integer(), nullable=True),
    sa.Column('tag_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['manga_id'], ['manga.manga_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.tag_id'], ondelete='CASCADE')
    )
    op.create_table('rating',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('manga_id', sa.Integer(), nullable=False),
    sa.Column('personal_rating', sa.Numeric(precision=3, scale=1), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.CheckConstraint('mod(personal_rating * 2, 1) = 0', name='rating_half_step_check'),
    sa.CheckConstraint('personal_rating >= 0 AND personal_rating <= 10', name='rating_range_check'),
    sa.ForeignKeyConstraint(['manga_id'], ['manga.manga_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'manga_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    '''Downgrade schema.'''
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('rating')
    op.drop_table('manga_tag')
    op.drop_table('manga_genre')
    op.drop_table('manga_demographic')
    op.drop_table('manga_collection')
    op.drop_table('manga_author')
    op.drop_table('manga')
    op.drop_table('collection')
    op.drop_table('user')
    op.drop_table('tag')
    op.drop_table('genre')
    op.drop_table('demographic')
    op.drop_table('author')
    # ### end Alembic commands ###
